import os
from celery.schedules import crontab
from cachelib.file import FileSystemCache
from typing import Optional

# General Superset configurations
ENABLE_CORS = True
PREFERRED_URL_SCHEME = 'https'
SUPERSET_WEBSERVER_PROTOCOL = "https"
PUBLIC_ROLE_LIKE = "Gamma"
SESSION_COOKIE_SAMESITE = "Lax"
SESSION_COOKIE_SECURE = False
SESSION_COOKIE_HTTPONLY = False
WTF_CSRF_ENABLED = False
ALERT_REPORTS_NOTIFICATION_DRY_RUN = False

# PostgreSQL database URI
SQLALCHEMY_DATABASE_URI = "postgresql://superset:superset@13.126.219.64:8005/superset"

# Feature flags
FEATURE_FLAGS = {
    "DASHBOARD_NATIVE_FILTERS": True,
    "DASHBOARD_CROSS_FILTERS": True,
    "DASHBOARD_NATIVE_FILTERS_SET": True,
    "ALERT_REPORTS": True,
    "DASHBOARD_RBAC": True,
    "ENABLE_TEMPLATE_PROCESSING": True
}

# Template extensions
TEMPLATES_EXTENSIONS= ['superset_jinja2_ext']

# Login redirect URL and disabled top-level navigation items
LOGIN_REDIRECT_URL = '/login'
DISABLED_TOP_LEVEL_NAV_ITEMS=['Dashboards','Charts','Data','Settings','Datasets']

# Redis configurations
def get_env_variable(var_name: str, default: Optional[str] = None) -> str:
    """Get the environment variable or raise exception."""
    try:
        return os.environ[var_name]
    except KeyError:
        if default is not None:
            return default
        else:
            error_msg = f"The environment variable {var_name} was missing, abort..."
            raise EnvironmentError(error_msg)

REDIS_HOST = get_env_variable("REDIS_HOST")
REDIS_PORT = get_env_variable("REDIS_PORT")
REDIS_CELERY_DB = get_env_variable("REDIS_CELERY_DB", "0")
REDIS_RESULTS_DB = get_env_variable("REDIS_RESULTS_DB", "1")

RESULTS_BACKEND = FileSystemCache("/app/superset_home/sqllab")

# Celery configurations
class CeleryConfig(object):
    BROKER_URL = f"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_CELERY_DB}"
    CELERY_IMPORTS = ("superset.sql_lab", "superset.tasks")
    CELERY_RESULT_BACKEND = f"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_RESULTS_DB}"
    CELERYD_LOG_LEVEL = "DEBUG"
    CELERYD_PREFETCH_MULTIPLIER = 1
    CELERY_ACKS_LATE = False
    CELERYBEAT_SCHEDULE = {
        "reports.scheduler": {
            "task": "reports.scheduler",
            "schedule": crontab(minute="*", hour="*"),
        },
        "reports.prune_log": {
            "task": "reports.prune_log",
            "schedule": crontab(minute=10, hour=0),
        },
    }

CELERY_CONFIG = CeleryConfig

# SMTP email configuration
SMTP_HOST = "smtp.gmail.com"
SMTP_PORT = 587
SMTP_STARTTLS = True
SMTP_SSL_SERVER_AUTH = True
SMTP_SSL = False
SMTP_USER = "iopexdashboard@gmail.com"
SMTP_PASSWORD = "vxcjhrfvuylgwfcb"
SMTP_MAIL_FROM = "iopexdashboard@gmail.com"
EMAIL_REPORTS_SUBJECT_PREFIX = "[Superset] "
SQLLAB_CTAS_NO_LIMIT = True

# WebDriver configuration for screenshot
WEBDRIVER_TYPE = "chrome"
WEBDRIVER_OPTION_ARGS = [
    "--force-device-scale-factor=2.0",
    "--high-dpi-support=2.0",
    "--headless",
    "--disable-gpu",
    "--disable-dev-shm-usage",
    "--no-sandbox",
    "--disable-setuid-sandbox",
    "--disable-extensions",
]

# Secret key for security
SECRET_KEY = "K3cJlSakvdi1AxWTVDX5CEw2/jmrS2I3ywheNj+32A/08nkmeoRVhjYH"

# Base URL for Superset
WEBDRIVER_BASEURL = "http://13.126.219.64:8088/"

# End of configuration file
